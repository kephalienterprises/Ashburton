@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService

@model IEnumerable<AshburtonCocWebsite.Models.Article>

@{
    ViewData["Title"] = "Articles";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>@ViewData["Title"]</h1>

@if ((await AuthorizationService.AuthorizeAsync(User, "RequireAdminRole")).Succeeded)
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
}

<div class="table-responsive">
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.AuthorName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Title)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Tags)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Scriptures)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Body)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Date)
                </th>
                @if ((await AuthorizationService.AuthorizeAsync(User, "RequireAdminRole")).Succeeded)
                {
                    <th></th>
                }
                </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.AuthorName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Tags)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Scriptures)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Body)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Date)
                </td>
                @if ((await AuthorizationService.AuthorizeAsync(User, "RequireAdminRole")).Succeeded)
                {
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    </td>
                }
                </tr>
            }
        </tbody>
    </table>
</div>